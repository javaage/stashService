package com.stash.model;

import java.util.ArrayList;
import java.util.List;

public class AllStockModelExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public AllStockModelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCodeIsNull() {
			addCriterion("code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andPyIsNull() {
			addCriterion("py is null");
			return (Criteria) this;
		}

		public Criteria andPyIsNotNull() {
			addCriterion("py is not null");
			return (Criteria) this;
		}

		public Criteria andPyEqualTo(String value) {
			addCriterion("py =", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyNotEqualTo(String value) {
			addCriterion("py <>", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyGreaterThan(String value) {
			addCriterion("py >", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyGreaterThanOrEqualTo(String value) {
			addCriterion("py >=", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyLessThan(String value) {
			addCriterion("py <", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyLessThanOrEqualTo(String value) {
			addCriterion("py <=", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyLike(String value) {
			addCriterion("py like", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyNotLike(String value) {
			addCriterion("py not like", value, "py");
			return (Criteria) this;
		}

		public Criteria andPyIn(List<String> values) {
			addCriterion("py in", values, "py");
			return (Criteria) this;
		}

		public Criteria andPyNotIn(List<String> values) {
			addCriterion("py not in", values, "py");
			return (Criteria) this;
		}

		public Criteria andPyBetween(String value1, String value2) {
			addCriterion("py between", value1, value2, "py");
			return (Criteria) this;
		}

		public Criteria andPyNotBetween(String value1, String value2) {
			addCriterion("py not between", value1, value2, "py");
			return (Criteria) this;
		}

		public Criteria andIndustryIsNull() {
			addCriterion("industry is null");
			return (Criteria) this;
		}

		public Criteria andIndustryIsNotNull() {
			addCriterion("industry is not null");
			return (Criteria) this;
		}

		public Criteria andIndustryEqualTo(String value) {
			addCriterion("industry =", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryNotEqualTo(String value) {
			addCriterion("industry <>", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryGreaterThan(String value) {
			addCriterion("industry >", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryGreaterThanOrEqualTo(String value) {
			addCriterion("industry >=", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryLessThan(String value) {
			addCriterion("industry <", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryLessThanOrEqualTo(String value) {
			addCriterion("industry <=", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryLike(String value) {
			addCriterion("industry like", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryNotLike(String value) {
			addCriterion("industry not like", value, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryIn(List<String> values) {
			addCriterion("industry in", values, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryNotIn(List<String> values) {
			addCriterion("industry not in", values, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryBetween(String value1, String value2) {
			addCriterion("industry between", value1, value2, "industry");
			return (Criteria) this;
		}

		public Criteria andIndustryNotBetween(String value1, String value2) {
			addCriterion("industry not between", value1, value2, "industry");
			return (Criteria) this;
		}

		public Criteria andPeIsNull() {
			addCriterion("pe is null");
			return (Criteria) this;
		}

		public Criteria andPeIsNotNull() {
			addCriterion("pe is not null");
			return (Criteria) this;
		}

		public Criteria andPeEqualTo(Double value) {
			addCriterion("pe =", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeNotEqualTo(Double value) {
			addCriterion("pe <>", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeGreaterThan(Double value) {
			addCriterion("pe >", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeGreaterThanOrEqualTo(Double value) {
			addCriterion("pe >=", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeLessThan(Double value) {
			addCriterion("pe <", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeLessThanOrEqualTo(Double value) {
			addCriterion("pe <=", value, "pe");
			return (Criteria) this;
		}

		public Criteria andPeIn(List<Double> values) {
			addCriterion("pe in", values, "pe");
			return (Criteria) this;
		}

		public Criteria andPeNotIn(List<Double> values) {
			addCriterion("pe not in", values, "pe");
			return (Criteria) this;
		}

		public Criteria andPeBetween(Double value1, Double value2) {
			addCriterion("pe between", value1, value2, "pe");
			return (Criteria) this;
		}

		public Criteria andPeNotBetween(Double value1, Double value2) {
			addCriterion("pe not between", value1, value2, "pe");
			return (Criteria) this;
		}

		public Criteria andPbIsNull() {
			addCriterion("pb is null");
			return (Criteria) this;
		}

		public Criteria andPbIsNotNull() {
			addCriterion("pb is not null");
			return (Criteria) this;
		}

		public Criteria andPbEqualTo(Double value) {
			addCriterion("pb =", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbNotEqualTo(Double value) {
			addCriterion("pb <>", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbGreaterThan(Double value) {
			addCriterion("pb >", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbGreaterThanOrEqualTo(Double value) {
			addCriterion("pb >=", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbLessThan(Double value) {
			addCriterion("pb <", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbLessThanOrEqualTo(Double value) {
			addCriterion("pb <=", value, "pb");
			return (Criteria) this;
		}

		public Criteria andPbIn(List<Double> values) {
			addCriterion("pb in", values, "pb");
			return (Criteria) this;
		}

		public Criteria andPbNotIn(List<Double> values) {
			addCriterion("pb not in", values, "pb");
			return (Criteria) this;
		}

		public Criteria andPbBetween(Double value1, Double value2) {
			addCriterion("pb between", value1, value2, "pb");
			return (Criteria) this;
		}

		public Criteria andPbNotBetween(Double value1, Double value2) {
			addCriterion("pb not between", value1, value2, "pb");
			return (Criteria) this;
		}

		public Criteria andTotalvalueIsNull() {
			addCriterion("totalvalue is null");
			return (Criteria) this;
		}

		public Criteria andTotalvalueIsNotNull() {
			addCriterion("totalvalue is not null");
			return (Criteria) this;
		}

		public Criteria andTotalvalueEqualTo(Double value) {
			addCriterion("totalvalue =", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueNotEqualTo(Double value) {
			addCriterion("totalvalue <>", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueGreaterThan(Double value) {
			addCriterion("totalvalue >", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueGreaterThanOrEqualTo(Double value) {
			addCriterion("totalvalue >=", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueLessThan(Double value) {
			addCriterion("totalvalue <", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueLessThanOrEqualTo(Double value) {
			addCriterion("totalvalue <=", value, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueIn(List<Double> values) {
			addCriterion("totalvalue in", values, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueNotIn(List<Double> values) {
			addCriterion("totalvalue not in", values, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueBetween(Double value1, Double value2) {
			addCriterion("totalvalue between", value1, value2, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andTotalvalueNotBetween(Double value1, Double value2) {
			addCriterion("totalvalue not between", value1, value2, "totalvalue");
			return (Criteria) this;
		}

		public Criteria andCurrencyIsNull() {
			addCriterion("currency is null");
			return (Criteria) this;
		}

		public Criteria andCurrencyIsNotNull() {
			addCriterion("currency is not null");
			return (Criteria) this;
		}

		public Criteria andCurrencyEqualTo(Double value) {
			addCriterion("currency =", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyNotEqualTo(Double value) {
			addCriterion("currency <>", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyGreaterThan(Double value) {
			addCriterion("currency >", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyGreaterThanOrEqualTo(Double value) {
			addCriterion("currency >=", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyLessThan(Double value) {
			addCriterion("currency <", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyLessThanOrEqualTo(Double value) {
			addCriterion("currency <=", value, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyIn(List<Double> values) {
			addCriterion("currency in", values, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyNotIn(List<Double> values) {
			addCriterion("currency not in", values, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyBetween(Double value1, Double value2) {
			addCriterion("currency between", value1, value2, "currency");
			return (Criteria) this;
		}

		public Criteria andCurrencyNotBetween(Double value1, Double value2) {
			addCriterion("currency not between", value1, value2, "currency");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.allstock
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.allstock
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 31 15:42:30 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}