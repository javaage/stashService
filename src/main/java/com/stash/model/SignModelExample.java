package com.stash.model;

import java.util.ArrayList;
import java.util.List;

public class SignModelExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public SignModelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCodeIsNull() {
			addCriterion("code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andSellIsNull() {
			addCriterion("sell is null");
			return (Criteria) this;
		}

		public Criteria andSellIsNotNull() {
			addCriterion("sell is not null");
			return (Criteria) this;
		}

		public Criteria andSellEqualTo(Integer value) {
			addCriterion("sell =", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellNotEqualTo(Integer value) {
			addCriterion("sell <>", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellGreaterThan(Integer value) {
			addCriterion("sell >", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellGreaterThanOrEqualTo(Integer value) {
			addCriterion("sell >=", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellLessThan(Integer value) {
			addCriterion("sell <", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellLessThanOrEqualTo(Integer value) {
			addCriterion("sell <=", value, "sell");
			return (Criteria) this;
		}

		public Criteria andSellIn(List<Integer> values) {
			addCriterion("sell in", values, "sell");
			return (Criteria) this;
		}

		public Criteria andSellNotIn(List<Integer> values) {
			addCriterion("sell not in", values, "sell");
			return (Criteria) this;
		}

		public Criteria andSellBetween(Integer value1, Integer value2) {
			addCriterion("sell between", value1, value2, "sell");
			return (Criteria) this;
		}

		public Criteria andSellNotBetween(Integer value1, Integer value2) {
			addCriterion("sell not between", value1, value2, "sell");
			return (Criteria) this;
		}

		public Criteria andBuyIsNull() {
			addCriterion("buy is null");
			return (Criteria) this;
		}

		public Criteria andBuyIsNotNull() {
			addCriterion("buy is not null");
			return (Criteria) this;
		}

		public Criteria andBuyEqualTo(Integer value) {
			addCriterion("buy =", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyNotEqualTo(Integer value) {
			addCriterion("buy <>", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyGreaterThan(Integer value) {
			addCriterion("buy >", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyGreaterThanOrEqualTo(Integer value) {
			addCriterion("buy >=", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyLessThan(Integer value) {
			addCriterion("buy <", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyLessThanOrEqualTo(Integer value) {
			addCriterion("buy <=", value, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyIn(List<Integer> values) {
			addCriterion("buy in", values, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyNotIn(List<Integer> values) {
			addCriterion("buy not in", values, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyBetween(Integer value1, Integer value2) {
			addCriterion("buy between", value1, value2, "buy");
			return (Criteria) this;
		}

		public Criteria andBuyNotBetween(Integer value1, Integer value2) {
			addCriterion("buy not between", value1, value2, "buy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyIsNull() {
			addCriterion("prefbuy is null");
			return (Criteria) this;
		}

		public Criteria andPrefBuyIsNotNull() {
			addCriterion("prefbuy is not null");
			return (Criteria) this;
		}

		public Criteria andPrefBuyEqualTo(Double value) {
			addCriterion("prefbuy =", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyNotEqualTo(Double value) {
			addCriterion("prefbuy <>", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyGreaterThan(Double value) {
			addCriterion("prefbuy >", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyGreaterThanOrEqualTo(Double value) {
			addCriterion("prefbuy >=", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyLessThan(Double value) {
			addCriterion("prefbuy <", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyLessThanOrEqualTo(Double value) {
			addCriterion("prefbuy <=", value, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyIn(List<Double> values) {
			addCriterion("prefbuy in", values, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyNotIn(List<Double> values) {
			addCriterion("prefbuy not in", values, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyBetween(Double value1, Double value2) {
			addCriterion("prefbuy between", value1, value2, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefBuyNotBetween(Double value1, Double value2) {
			addCriterion("prefbuy not between", value1, value2, "prefBuy");
			return (Criteria) this;
		}

		public Criteria andPrefSellIsNull() {
			addCriterion("prefsell is null");
			return (Criteria) this;
		}

		public Criteria andPrefSellIsNotNull() {
			addCriterion("prefsell is not null");
			return (Criteria) this;
		}

		public Criteria andPrefSellEqualTo(Double value) {
			addCriterion("prefsell =", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellNotEqualTo(Double value) {
			addCriterion("prefsell <>", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellGreaterThan(Double value) {
			addCriterion("prefsell >", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellGreaterThanOrEqualTo(Double value) {
			addCriterion("prefsell >=", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellLessThan(Double value) {
			addCriterion("prefsell <", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellLessThanOrEqualTo(Double value) {
			addCriterion("prefsell <=", value, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellIn(List<Double> values) {
			addCriterion("prefsell in", values, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellNotIn(List<Double> values) {
			addCriterion("prefsell not in", values, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellBetween(Double value1, Double value2) {
			addCriterion("prefsell between", value1, value2, "prefSell");
			return (Criteria) this;
		}

		public Criteria andPrefSellNotBetween(Double value1, Double value2) {
			addCriterion("prefsell not between", value1, value2, "prefSell");
			return (Criteria) this;
		}

		public Criteria andCurrentIsNull() {
			addCriterion("current is null");
			return (Criteria) this;
		}

		public Criteria andCurrentIsNotNull() {
			addCriterion("current is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentEqualTo(Double value) {
			addCriterion("current =", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentNotEqualTo(Double value) {
			addCriterion("current <>", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentGreaterThan(Double value) {
			addCriterion("current >", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentGreaterThanOrEqualTo(Double value) {
			addCriterion("current >=", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentLessThan(Double value) {
			addCriterion("current <", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentLessThanOrEqualTo(Double value) {
			addCriterion("current <=", value, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentIn(List<Double> values) {
			addCriterion("current in", values, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentNotIn(List<Double> values) {
			addCriterion("current not in", values, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentBetween(Double value1, Double value2) {
			addCriterion("current between", value1, value2, "current");
			return (Criteria) this;
		}

		public Criteria andCurrentNotBetween(Double value1, Double value2) {
			addCriterion("current not between", value1, value2, "current");
			return (Criteria) this;
		}

		public Criteria andHighIsNull() {
			addCriterion("high is null");
			return (Criteria) this;
		}

		public Criteria andHighIsNotNull() {
			addCriterion("high is not null");
			return (Criteria) this;
		}

		public Criteria andHighEqualTo(Double value) {
			addCriterion("high =", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighNotEqualTo(Double value) {
			addCriterion("high <>", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighGreaterThan(Double value) {
			addCriterion("high >", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighGreaterThanOrEqualTo(Double value) {
			addCriterion("high >=", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighLessThan(Double value) {
			addCriterion("high <", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighLessThanOrEqualTo(Double value) {
			addCriterion("high <=", value, "high");
			return (Criteria) this;
		}

		public Criteria andHighIn(List<Double> values) {
			addCriterion("high in", values, "high");
			return (Criteria) this;
		}

		public Criteria andHighNotIn(List<Double> values) {
			addCriterion("high not in", values, "high");
			return (Criteria) this;
		}

		public Criteria andHighBetween(Double value1, Double value2) {
			addCriterion("high between", value1, value2, "high");
			return (Criteria) this;
		}

		public Criteria andHighNotBetween(Double value1, Double value2) {
			addCriterion("high not between", value1, value2, "high");
			return (Criteria) this;
		}

		public Criteria andLowIsNull() {
			addCriterion("low is null");
			return (Criteria) this;
		}

		public Criteria andLowIsNotNull() {
			addCriterion("low is not null");
			return (Criteria) this;
		}

		public Criteria andLowEqualTo(Double value) {
			addCriterion("low =", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowNotEqualTo(Double value) {
			addCriterion("low <>", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowGreaterThan(Double value) {
			addCriterion("low >", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowGreaterThanOrEqualTo(Double value) {
			addCriterion("low >=", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowLessThan(Double value) {
			addCriterion("low <", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowLessThanOrEqualTo(Double value) {
			addCriterion("low <=", value, "low");
			return (Criteria) this;
		}

		public Criteria andLowIn(List<Double> values) {
			addCriterion("low in", values, "low");
			return (Criteria) this;
		}

		public Criteria andLowNotIn(List<Double> values) {
			addCriterion("low not in", values, "low");
			return (Criteria) this;
		}

		public Criteria andLowBetween(Double value1, Double value2) {
			addCriterion("low between", value1, value2, "low");
			return (Criteria) this;
		}

		public Criteria andLowNotBetween(Double value1, Double value2) {
			addCriterion("low not between", value1, value2, "low");
			return (Criteria) this;
		}

		public Criteria andAvgIsNull() {
			addCriterion("avg is null");
			return (Criteria) this;
		}

		public Criteria andAvgIsNotNull() {
			addCriterion("avg is not null");
			return (Criteria) this;
		}

		public Criteria andAvgEqualTo(Double value) {
			addCriterion("avg =", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgNotEqualTo(Double value) {
			addCriterion("avg <>", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgGreaterThan(Double value) {
			addCriterion("avg >", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgGreaterThanOrEqualTo(Double value) {
			addCriterion("avg >=", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgLessThan(Double value) {
			addCriterion("avg <", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgLessThanOrEqualTo(Double value) {
			addCriterion("avg <=", value, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgIn(List<Double> values) {
			addCriterion("avg in", values, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgNotIn(List<Double> values) {
			addCriterion("avg not in", values, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgBetween(Double value1, Double value2) {
			addCriterion("avg between", value1, value2, "avg");
			return (Criteria) this;
		}

		public Criteria andAvgNotBetween(Double value1, Double value2) {
			addCriterion("avg not between", value1, value2, "avg");
			return (Criteria) this;
		}

		public Criteria andConceptIsNull() {
			addCriterion("concept is null");
			return (Criteria) this;
		}

		public Criteria andConceptIsNotNull() {
			addCriterion("concept is not null");
			return (Criteria) this;
		}

		public Criteria andConceptEqualTo(String value) {
			addCriterion("concept =", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptNotEqualTo(String value) {
			addCriterion("concept <>", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptGreaterThan(String value) {
			addCriterion("concept >", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptGreaterThanOrEqualTo(String value) {
			addCriterion("concept >=", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptLessThan(String value) {
			addCriterion("concept <", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptLessThanOrEqualTo(String value) {
			addCriterion("concept <=", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptLike(String value) {
			addCriterion("concept like", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptNotLike(String value) {
			addCriterion("concept not like", value, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptIn(List<String> values) {
			addCriterion("concept in", values, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptNotIn(List<String> values) {
			addCriterion("concept not in", values, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptBetween(String value1, String value2) {
			addCriterion("concept between", value1, value2, "concept");
			return (Criteria) this;
		}

		public Criteria andConceptNotBetween(String value1, String value2) {
			addCriterion("concept not between", value1, value2, "concept");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.sign
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.sign
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 31 17:43:08 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}