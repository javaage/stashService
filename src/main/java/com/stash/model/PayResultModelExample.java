package com.stash.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PayResultModelExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public PayResultModelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andOrderIdIsNull() {
			addCriterion("orderid is null");
			return (Criteria) this;
		}

		public Criteria andOrderIdIsNotNull() {
			addCriterion("orderid is not null");
			return (Criteria) this;
		}

		public Criteria andOrderIdEqualTo(String value) {
			addCriterion("orderid =", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotEqualTo(String value) {
			addCriterion("orderid <>", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThan(String value) {
			addCriterion("orderid >", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThanOrEqualTo(String value) {
			addCriterion("orderid >=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThan(String value) {
			addCriterion("orderid <", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThanOrEqualTo(String value) {
			addCriterion("orderid <=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLike(String value) {
			addCriterion("orderid like", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotLike(String value) {
			addCriterion("orderid not like", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdIn(List<String> values) {
			addCriterion("orderid in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotIn(List<String> values) {
			addCriterion("orderid not in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdBetween(String value1, String value2) {
			addCriterion("orderid between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotBetween(String value1, String value2) {
			addCriterion("orderid not between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andAppIdIsNull() {
			addCriterion("appid is null");
			return (Criteria) this;
		}

		public Criteria andAppIdIsNotNull() {
			addCriterion("appid is not null");
			return (Criteria) this;
		}

		public Criteria andAppIdEqualTo(String value) {
			addCriterion("appid =", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdNotEqualTo(String value) {
			addCriterion("appid <>", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdGreaterThan(String value) {
			addCriterion("appid >", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdGreaterThanOrEqualTo(String value) {
			addCriterion("appid >=", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdLessThan(String value) {
			addCriterion("appid <", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdLessThanOrEqualTo(String value) {
			addCriterion("appid <=", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdLike(String value) {
			addCriterion("appid like", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdNotLike(String value) {
			addCriterion("appid not like", value, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdIn(List<String> values) {
			addCriterion("appid in", values, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdNotIn(List<String> values) {
			addCriterion("appid not in", values, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdBetween(String value1, String value2) {
			addCriterion("appid between", value1, value2, "appId");
			return (Criteria) this;
		}

		public Criteria andAppIdNotBetween(String value1, String value2) {
			addCriterion("appid not between", value1, value2, "appId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("userid is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("userid is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("userid =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("userid <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("userid >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("userid >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("userid <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("userid <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("userid like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("userid not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("userid in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("userid not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("userid between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("userid not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNull() {
			addCriterion("paytype is null");
			return (Criteria) this;
		}

		public Criteria andPayTypeIsNotNull() {
			addCriterion("paytype is not null");
			return (Criteria) this;
		}

		public Criteria andPayTypeEqualTo(Integer value) {
			addCriterion("paytype =", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotEqualTo(Integer value) {
			addCriterion("paytype <>", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThan(Integer value) {
			addCriterion("paytype >", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("paytype >=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThan(Integer value) {
			addCriterion("paytype <", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeLessThanOrEqualTo(Integer value) {
			addCriterion("paytype <=", value, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeIn(List<Integer> values) {
			addCriterion("paytype in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotIn(List<Integer> values) {
			addCriterion("paytype not in", values, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeBetween(Integer value1, Integer value2) {
			addCriterion("paytype between", value1, value2, "payType");
			return (Criteria) this;
		}

		public Criteria andPayTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("paytype not between", value1, value2, "payType");
			return (Criteria) this;
		}

		public Criteria andResultCodeIsNull() {
			addCriterion("resultcode is null");
			return (Criteria) this;
		}

		public Criteria andResultCodeIsNotNull() {
			addCriterion("resultcode is not null");
			return (Criteria) this;
		}

		public Criteria andResultCodeEqualTo(Integer value) {
			addCriterion("resultcode =", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeNotEqualTo(Integer value) {
			addCriterion("resultcode <>", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeGreaterThan(Integer value) {
			addCriterion("resultcode >", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeGreaterThanOrEqualTo(Integer value) {
			addCriterion("resultcode >=", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeLessThan(Integer value) {
			addCriterion("resultcode <", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeLessThanOrEqualTo(Integer value) {
			addCriterion("resultcode <=", value, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeIn(List<Integer> values) {
			addCriterion("resultcode in", values, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeNotIn(List<Integer> values) {
			addCriterion("resultcode not in", values, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeBetween(Integer value1, Integer value2) {
			addCriterion("resultcode between", value1, value2, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultCodeNotBetween(Integer value1, Integer value2) {
			addCriterion("resultcode not between", value1, value2, "resultCode");
			return (Criteria) this;
		}

		public Criteria andResultStringIsNull() {
			addCriterion("resultstring is null");
			return (Criteria) this;
		}

		public Criteria andResultStringIsNotNull() {
			addCriterion("resultstring is not null");
			return (Criteria) this;
		}

		public Criteria andResultStringEqualTo(String value) {
			addCriterion("resultstring =", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringNotEqualTo(String value) {
			addCriterion("resultstring <>", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringGreaterThan(String value) {
			addCriterion("resultstring >", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringGreaterThanOrEqualTo(String value) {
			addCriterion("resultstring >=", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringLessThan(String value) {
			addCriterion("resultstring <", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringLessThanOrEqualTo(String value) {
			addCriterion("resultstring <=", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringLike(String value) {
			addCriterion("resultstring like", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringNotLike(String value) {
			addCriterion("resultstring not like", value, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringIn(List<String> values) {
			addCriterion("resultstring in", values, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringNotIn(List<String> values) {
			addCriterion("resultstring not in", values, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringBetween(String value1, String value2) {
			addCriterion("resultstring between", value1, value2, "resultString");
			return (Criteria) this;
		}

		public Criteria andResultStringNotBetween(String value1, String value2) {
			addCriterion("resultstring not between", value1, value2, "resultString");
			return (Criteria) this;
		}

		public Criteria andTradeIdIsNull() {
			addCriterion("tradeid is null");
			return (Criteria) this;
		}

		public Criteria andTradeIdIsNotNull() {
			addCriterion("tradeid is not null");
			return (Criteria) this;
		}

		public Criteria andTradeIdEqualTo(String value) {
			addCriterion("tradeid =", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdNotEqualTo(String value) {
			addCriterion("tradeid <>", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdGreaterThan(String value) {
			addCriterion("tradeid >", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdGreaterThanOrEqualTo(String value) {
			addCriterion("tradeid >=", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdLessThan(String value) {
			addCriterion("tradeid <", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdLessThanOrEqualTo(String value) {
			addCriterion("tradeid <=", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdLike(String value) {
			addCriterion("tradeid like", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdNotLike(String value) {
			addCriterion("tradeid not like", value, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdIn(List<String> values) {
			addCriterion("tradeid in", values, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdNotIn(List<String> values) {
			addCriterion("tradeid not in", values, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdBetween(String value1, String value2) {
			addCriterion("tradeid between", value1, value2, "tradeId");
			return (Criteria) this;
		}

		public Criteria andTradeIdNotBetween(String value1, String value2) {
			addCriterion("tradeid not between", value1, value2, "tradeId");
			return (Criteria) this;
		}

		public Criteria andAmountIsNull() {
			addCriterion("amount is null");
			return (Criteria) this;
		}

		public Criteria andAmountIsNotNull() {
			addCriterion("amount is not null");
			return (Criteria) this;
		}

		public Criteria andAmountEqualTo(Double value) {
			addCriterion("amount =", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountNotEqualTo(Double value) {
			addCriterion("amount <>", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountGreaterThan(Double value) {
			addCriterion("amount >", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountGreaterThanOrEqualTo(Double value) {
			addCriterion("amount >=", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountLessThan(Double value) {
			addCriterion("amount <", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountLessThanOrEqualTo(Double value) {
			addCriterion("amount <=", value, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountIn(List<Double> values) {
			addCriterion("amount in", values, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountNotIn(List<Double> values) {
			addCriterion("amount not in", values, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountBetween(Double value1, Double value2) {
			addCriterion("amount between", value1, value2, "amount");
			return (Criteria) this;
		}

		public Criteria andAmountNotBetween(Double value1, Double value2) {
			addCriterion("amount not between", value1, value2, "amount");
			return (Criteria) this;
		}

		public Criteria andPayTimeIsNull() {
			addCriterion("paytime is null");
			return (Criteria) this;
		}

		public Criteria andPayTimeIsNotNull() {
			addCriterion("paytime is not null");
			return (Criteria) this;
		}

		public Criteria andPayTimeEqualTo(Date value) {
			addCriterionForJDBCDate("paytime =", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("paytime <>", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("paytime >", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("paytime >=", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeLessThan(Date value) {
			addCriterionForJDBCDate("paytime <", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("paytime <=", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeIn(List<Date> values) {
			addCriterionForJDBCDate("paytime in", values, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("paytime not in", values, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("paytime between", value1, value2, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("paytime not between", value1, value2, "payTime");
			return (Criteria) this;
		}

		public Criteria andSignIsNull() {
			addCriterion("sign is null");
			return (Criteria) this;
		}

		public Criteria andSignIsNotNull() {
			addCriterion("sign is not null");
			return (Criteria) this;
		}

		public Criteria andSignEqualTo(String value) {
			addCriterion("sign =", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignNotEqualTo(String value) {
			addCriterion("sign <>", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignGreaterThan(String value) {
			addCriterion("sign >", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignGreaterThanOrEqualTo(String value) {
			addCriterion("sign >=", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignLessThan(String value) {
			addCriterion("sign <", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignLessThanOrEqualTo(String value) {
			addCriterion("sign <=", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignLike(String value) {
			addCriterion("sign like", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignNotLike(String value) {
			addCriterion("sign not like", value, "sign");
			return (Criteria) this;
		}

		public Criteria andSignIn(List<String> values) {
			addCriterion("sign in", values, "sign");
			return (Criteria) this;
		}

		public Criteria andSignNotIn(List<String> values) {
			addCriterion("sign not in", values, "sign");
			return (Criteria) this;
		}

		public Criteria andSignBetween(String value1, String value2) {
			addCriterion("sign between", value1, value2, "sign");
			return (Criteria) this;
		}

		public Criteria andSignNotBetween(String value1, String value2) {
			addCriterion("sign not between", value1, value2, "sign");
			return (Criteria) this;
		}

		public Criteria andCommentIsNull() {
			addCriterion("comment is null");
			return (Criteria) this;
		}

		public Criteria andCommentIsNotNull() {
			addCriterion("comment is not null");
			return (Criteria) this;
		}

		public Criteria andCommentEqualTo(String value) {
			addCriterion("comment =", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotEqualTo(String value) {
			addCriterion("comment <>", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThan(String value) {
			addCriterion("comment >", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThanOrEqualTo(String value) {
			addCriterion("comment >=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThan(String value) {
			addCriterion("comment <", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThanOrEqualTo(String value) {
			addCriterion("comment <=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLike(String value) {
			addCriterion("comment like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotLike(String value) {
			addCriterion("comment not like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentIn(List<String> values) {
			addCriterion("comment in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotIn(List<String> values) {
			addCriterion("comment not in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentBetween(String value1, String value2) {
			addCriterion("comment between", value1, value2, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotBetween(String value1, String value2) {
			addCriterion("comment not between", value1, value2, "comment");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.pay_result
	 * @mbg.generated  Wed Nov 01 16:41:19 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pay_result
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 31 17:43:08 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}